name: .NET Build (Windows)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: {}

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: '1'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Ensure nuget.org source is available
        shell: powershell
        run: |
          # If repository contains a NuGet.config that points only to a local 'packages' folder,
          # add the official nuget.org feed so CI can restore public packages.
          $exists = dotnet nuget list source | Select-String -Pattern 'nuget.org'
          if (-not $exists) {
            dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org
            Write-Host 'Added nuget.org source'
          } else {
            Write-Host 'nuget.org source already configured'
          }

      - name: Restore NuGet packages
        run: |
          dotnet restore "EasiPluginSample.sln"

      - name: Build solution (Release)
        run: |
          dotnet build "EasiPluginSample.sln" -c Release --no-restore

      - name: Publish project outputs
        run: |
          # Ensure the project is published. Allow publish to build if necessary (no --no-build)
          dotnet publish "src/EasiPluginSample/EasiPluginSample.csproj" -c Release -o "artifacts/EasiPluginSample"

      - name: List artifacts folder
        run: |
          if (Test-Path artifacts) { Get-ChildItem -Path artifacts -Recurse | ForEach-Object { Write-Host $_.FullName } } else { Write-Host 'artifacts folder does not exist' }

      - name: Archive build outputs (safe)
        shell: powershell
        run: |
          # Compress only when there are files; otherwise create a placeholder zip so upload step doesn't fail
          if (Test-Path 'artifacts') {
            $files = Get-ChildItem -Path 'artifacts' -Recurse -File
            if ($files.Count -gt 0) {
              Compress-Archive -Path 'artifacts\*' -DestinationPath build_artifact.zip -Force
              Write-Host 'Artifacts archived to build_artifact.zip'
            } else {
              Write-Host 'Artifacts folder exists but is empty; creating placeholder zip'
              New-Item -Path build_artifact.zip -ItemType File -Force | Out-Null
            }
          } else {
            Write-Host 'Artifacts folder not found; creating placeholder zip'
            New-Item -Path build_artifact.zip -ItemType File -Force | Out-Null
          }

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: EasiPluginSample-build
          path: build_artifact.zip
